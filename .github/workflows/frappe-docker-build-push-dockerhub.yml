name: Build and Push Docker Image on Tag

on:
  push:
    tags:
      - 'v*'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/frappe-custom

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate and encode apps.json
        id: apps_json
        run: |
          echo "Checking for apps.json file..."
          
          if [ ! -f "apps.json" ]; then
            echo "❌ ERROR: apps.json file not found in root directory"
            echo "Please create an apps.json file in the repository root"
            exit 1
          fi
          
          echo "✅ apps.json file found"
          echo "📄 Content of apps.json:"
          cat apps.json
          
          # Validate JSON syntax
          if ! python3 -m json.tool apps.json > /dev/null 2>&1; then
            echo "❌ ERROR: apps.json is not valid JSON"
            exit 1
          fi
          
          echo "✅ apps.json is valid JSON"
          
          # Convert to base64
          APPS_JSON_BASE64=$(cat apps.json | base64 -w 0)
          echo "APPS_JSON_BASE64=$APPS_JSON_BASE64" >> $GITHUB_OUTPUT
          
          echo "✅ apps.json successfully encoded to base64"

      - name: Set up QEMU (for multi-platform builds)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: images/custom/Containerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            APPS_JSON_BASE64=${{ steps.apps_json.outputs.APPS_JSON_BASE64 }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.build-and-push.outputs.digest }}

      - name: Build Summary
        run: |
          echo "## 🚀 Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: ${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tags**: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Digest**: ${{ steps.build-and-push.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
